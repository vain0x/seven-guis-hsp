; 5. CRUD

#packopt name "crud"
#packopt hide 1

#include "kernel32.as"
#include "user32.as"

#define WM_COMMAND 0x0111
#define WM_SIZING 0x0214

#define EN_CHANGE 0x0300
#define LBN_SELCHANGE 1
#define LB_INSERTSTRING         0x0181
#define LB_DELETESTRING         0x0182
#define LB_GETCURSEL            0x0188

#define ctype LOWORD(%1) ((%1) & 0xFFFF)
#define ctype HIWORD(%1) (((%1) >> 16) & 0xFFFF)

; ================================================

	gsel 0, -1

	window_w = 420
	window_h = 300
	screen 1, ginfo_dispx, ginfo_dispy, screen_hide, ,, window_w, window_h
	title "CRUD"

	; initialize
	person_count = 0
	sdim person_names
	sdim person_surnames
	sdim person_fullnames
	dim person_visible
	dim person_deleted

	; list of filtered persons
	view_count = 0
	dim view_person_indexes

	current_list = ""
	current_index = -1
	current_prefix = ""
	prefix_len = 0
	current_name = ""
	current_surname = ""

	font "Biz UDGothic", 14
	objmode objmode_usefont

	; Left:
	input current_prefix, 90, 25
	prefix_input_id = stat

	; Listbox
	listbox current_index, 200, ""
	listbox_id = stat

	; Right:
	input current_name, 100, 25
	name_input_id = stat

	input current_surname, 100, 25
	surname_input_id = stat

	; Footer:
	objsize 80, 25
	button gosub "Create", *on_create_click
	create_button_id = stat

	button gosub "Update", *on_update_click
	update_button_id = stat

	button gosub "Delete", *on_delete_click
	delete_button_id = stat

	oncmd gosub *on_command, WM_COMMAND
	oncmd gosub *on_sizing, WM_SIZING

	; init:
	; Default values
	person_names(person_count) = "Hans"
	person_surnames(person_count) = "Emil"
	person_deleted(person_count) = 0
	person_count++

	person_names(person_count) = "Max"
	person_surnames(person_count) = "Mustermann"
	person_deleted(person_count) = 0
	person_count++

	person_names(person_count) = "Roman"
	person_surnames(person_count) = "Tisch"
	person_deleted(person_count) = 0
	person_count++

	gosub *update_layout
	gosub *revalidate_persons
	gosub *reset_listbox

	; show main window
	gsel 1, 1
	stop

; ------------------------------------------------
; View events
; ------------------------------------------------

; These labels are called by UI events (e.g. window messages, button click)

*on_command

	if lparam == objinfo_hwnd(prefix_input_id) {
		if HIWORD(wparam) == EN_CHANGE {
			gosub *on_prefix_change
			return
		}
	}
	if lparam == objinfo_hwnd(listbox_id) {
		if HIWORD(wparam) == LBN_SELCHANGE {
			sendmsg objinfo_hwnd(listbox_id), LB_GETCURSEL
			current_index = stat
			gosub *on_list_select
			return
		}
	}
	return

*on_sizing

	gosub *update_layout
	return

*update_layout

	window_w = limit(ginfo_winx, 400)
	window_h = limit(ginfo_winy, 300)

	margin = 10
	input_h = 25
	button_w = 80
	button_h = 25

	pane_w = window_w / 2 - margin * 2
	listbox_h = window_h - (input_h + button_h) - margin * 4
	right_x = window_w / 2 + margin
	footer_y = input_h + listbox_h + margin * 3

	redraw 2

	; background: gray
	hsvcolor ,, 0xF3
	boxf

	; color: black
	hsvcolor ,, 0x1B

	; Left pane:
	; Filter
	label_w = 100
	input_x = label_w + margin * 2
	input_y = margin
	input_w = pane_w - label_w - margin
	pos margin, margin + 5
	mes "Filter prefix:"
	MoveWindow objinfo_hwnd(prefix_input_id), input_x, input_y, input_w, input_h, 1

	; Listbox
	listbox_y = input_h + margin * 2
	MoveWindow objinfo_hwnd(listbox_id), margin, listbox_y, pane_w, listbox_h, 1

	; Right pane:
	; Name field:
	field_y = input_h + margin * 2
	label_x = 65
	input_x = right_x + label_x
	input_w = pane_w - label_x
	pos right_x, field_y + 5
	mes "Name:"
	MoveWindow objinfo_hwnd(name_input_id), input_x, field_y, input_w, input_h, 1

	; Surname field:
	field_y += input_h + margin
	pos right_x, field_y + 5
	mes "Surname:"
	MoveWindow objinfo_hwnd(surname_input_id), input_x, field_y, input_w, input_h, 1

	; Footer (buttons):
	button_x = margin
	objsize button_w, button_h
	pos button_x, footer_y
	MoveWindow objinfo_hwnd(create_button_id), button_x, footer_y, button_w, button_h, 1

	button_x += button_w + margin
	MoveWindow objinfo_hwnd(update_button_id), button_x, footer_y, button_w, button_h, 1

	button_x += button_w + margin
	MoveWindow objinfo_hwnd(delete_button_id), button_x, footer_y, button_w, button_h, 1
	redraw
	return

*on_prefix_change

	logmes strf("prefix_change(%s)", current_prefix)

	prefix_len = strlen(current_prefix)
	gosub *reset_listbox
	return

*reset_listbox

	vi = current_index

	if 0 <= vi && vi < view_count {
		pi = view_person_indexes(vi)
	} else {
		pi = -1
	}
	person_index_orig = pi

	gosub *revalidate_persons

	; update listbox contents
	current_list = ""
	repeat view_count
		pi = view_person_indexes(cnt)
		current_list += person_fullnames(pi)
		current_list += "\n"
	loop

	objprm listbox_id, current_list

	; select item (if selected item is still visible)
	vi = -1
	if person_index_orig >= 0 {
		repeat view_count
			if view_person_indexes(cnt) == person_index_orig {
				vi = cnt
				break
			}
		loop
	}
	objprm listbox_id, vi
	return

*on_list_select

	logmes strf("select(%d)", current_index)

	vi = current_index
	if 0 <= vi && vi < view_count {
		pi = view_person_indexes(vi)
	} else {
		pi = -1
	}

	if pi < 0 {
		; unselected
		current_name = ""
		current_surname = ""

		objprm name_input_id, ""
		objprm surname_input_id, ""
		return
	}

	assert pi < person_count
	assert person_visible(pi)

	current_name = person_names(pi)
	current_surname = person_surnames(pi)

	objprm name_input_id, current_name
	objprm surname_input_id, current_surname
	return

*on_create_click

	logmes strf("create(%s, %s)", current_surname, current_name)

	; add person
	pi = person_count
	person_names(pi) = current_name
	person_surnames(pi) = current_surname
	person_deleted(pi) = 0
	person_count++

	gosub *revalidate_persons

	if person_visible(pi) {
		assert view_count >= 0
		assert view_person_indexes(view_count - 1) == pi
		vi = view_count - 1

		; add to listbox
		current_index = vi
		sendmsg objinfo_hwnd(listbox_id), LB_INSERTSTRING, current_index, person_fullnames(pi)
		objprm listbox_id, current_index
	}
	return

*on_update_click

	logmes strf("update(%s, %s, %d)", current_surname, current_name, current_index)

	vi = current_index
	if (0 <= vi && vi < view_count) == 0 : return

	pi = view_person_indexes(vi)
	assert 0 <= pi && pi < person_count
	assert person_visible(pi)

	person_surnames(pi) = current_surname
	person_names(pi) = current_name
	gosub *revalidate_persons

	; update listbox item
	sendmsg objinfo_hwnd(listbox_id), LB_DELETESTRING, current_index
	sendmsg objinfo_hwnd(listbox_id), LB_INSERTSTRING, current_index, person_fullnames(pi)
	objprm listbox_id, current_index
	return

*on_delete_click

	logmes strf("delete(%d)", current_index)

	vi = current_index
	if (0 <= vi && vi < view_count) == 0 : return

	pi = view_person_indexes(vi)
	assert 0 <= pi && pi < person_count
	assert person_visible(pi)

	person_names(pi) = ""
	person_surnames(pi) = ""
	person_fullnames(pi) = ""
	person_visible(pi) = 0
	person_deleted(pi) = 1

	; Remove item at current_index
	repeat view_count - vi - 1, vi
		view_person_indexes(cnt) = view_person_indexes(cnt + 1)
	loop
	view_count--

	sendmsg objinfo_hwnd(listbox_id), LB_DELETESTRING, vi
	if vi == view_count {
		vi--
	}
	current_index = vi
	objprm listbox_id, current_index

	gosub *on_list_select
	return

; ------------------------------------------------
; Model
; ------------------------------------------------

; Computes person_fullnames and person_visible
*revalidate_persons

	repeat person_count
		if person_deleted(cnt) : continue

		person_fullnames(cnt) = strf("%s, %s", person_surnames(cnt), person_names(cnt))

		ok = 1
		if prefix_len >= 1 {
			ok = strmid(person_fullnames(cnt), 0, prefix_len) == current_prefix
		}
		person_visible(cnt) = ok
	loop

	view_count = 0
	repeat person_count
		if person_visible(cnt) {
			view_person_indexes(view_count) = cnt
			view_count++
		}
	loop
	return
